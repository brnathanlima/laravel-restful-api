{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel Restful API",
        "description": "This API was concepted during classes of the course 'RESTful API with Laravel: Build a Real API with Laravel' that I took from the Udemy platform.",
        "contact": {
            "email": "nathanaellimacpc@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.12.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "Default development server"
        },
        {
            "url": "https://brnathanlima-laravel-api.herokuapp.com",
            "description": "Production server"
        }
    ],
    "paths": {
        "/buyers/{buyer}/categories": {
            "get": {
                "tags": [
                    "Buyers"
                ],
                "summary": "Get list of buyer's categories",
                "description": "Returns list of buyer's categories",
                "operationId": "getBuyerCategoriesList",
                "parameters": [
                    {
                        "name": "buyer",
                        "in": "path",
                        "description": "Buyer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Transaction property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a user with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any user with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/buyers": {
            "get": {
                "tags": [
                    "Buyers"
                ],
                "summary": "Get list of buyers",
                "description": "Returns list of buyers",
                "operationId": "getBuyersList",
                "parameters": [
                    {
                        "name": "isVerified",
                        "in": "query",
                        "description": "List all verified users",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Buyer property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/buyers/{buyer}": {
            "get": {
                "tags": [
                    "Buyers"
                ],
                "summary": "Get buyer information",
                "description": "Returns buyer data",
                "operationId": "getBuyerById",
                "parameters": [
                    {
                        "name": "buyer",
                        "in": "path",
                        "description": "Buyer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a buyer with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any buyer with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/buyers/{buyer}/products": {
            "get": {
                "tags": [
                    "Buyers"
                ],
                "summary": "Get list of buyer's products",
                "description": "Returns list of buyer's products",
                "operationId": "getBuyerProductsList",
                "parameters": [
                    {
                        "name": "buyer",
                        "in": "path",
                        "description": "Buyer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "stock",
                        "in": "query",
                        "description": "List all buyer's products with the specified stock amount",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "situation",
                        "in": "query",
                        "description": "List all buyer's products with the specified situation",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Transaction property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a buyer with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any buyer with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/buyers/{buyer}/sellers": {
            "get": {
                "tags": [
                    "Buyers"
                ],
                "summary": "Get list of buyer's sellers",
                "description": "Returns list of buyer's sellers",
                "operationId": "getBuyerSellersList",
                "parameters": [
                    {
                        "name": "buyer",
                        "in": "path",
                        "description": "Buyer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Transaction property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a buyer with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any buyer with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/buyers/{buyer}/transactions": {
            "get": {
                "tags": [
                    "Buyers"
                ],
                "summary": "Get list of buyer's transactions",
                "description": "Returns list of buyer's transactions",
                "operationId": "getBuyerTransactionsList",
                "parameters": [
                    {
                        "name": "buyer",
                        "in": "path",
                        "description": "Buyer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "List all buyer's transaction with the specified quantity of products",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Transaction property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a buyer with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any buyer with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/categories/{category}/buyers": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of category's buyers",
                "description": "Returns list of category's buyers",
                "operationId": "getCategoryBuyers",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Transaction property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a category with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any category with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of categories",
                "description": "Returns list of categories",
                "operationId": "getCategoriesList",
                "parameters": [
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Category property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Store new category",
                "description": "Returns category data",
                "operationId": "storeCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a buyer with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any buyer with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns when there's some valuseration trouble",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "The name is required."
                                                            ]
                                                        }
                                                    },
                                                    "description": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "The description is required."
                                                            ]
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "422"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/categories/{category}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category information",
                "description": "Returns category data",
                "operationId": "getCategoryById",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a category with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any category with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update existing category",
                "description": "Returns updated category data",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "title",
                                    "details"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a category with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any category with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete existing category",
                "description": "Deletes a category data and returns no content",
                "operationId": "deleteCategor",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a category with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any category with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/categories/{category}/products": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get the list of a category's products",
                "description": "Returns the list of category's products",
                "operationId": "getCategoryProductsList",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "stock",
                        "in": "query",
                        "description": "List all category's products with the specified stock amount",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "situation",
                        "in": "query",
                        "description": "List all category's products with the specified situation",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Category's product property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a category with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any category with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/categories/{category}/sellers": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get the list of a category's sellers",
                "description": "Returns the list of category's sellers",
                "operationId": "getCategorySellersList",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Category's product property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a category with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any category with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/categories/{category}/transactions": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of category's transactions",
                "description": "Returns list of category's transactions",
                "operationId": "getCategoryTransactionsList",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "List all category's transaction with the specified quantity of products",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Transaction property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a category with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any category with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/products/{product}/buyers": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of product's buyers",
                "description": "Returns list of product's buyers",
                "operationId": "getProductBuyersList",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Transaction property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a product with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any product with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/products/{product}/buyers/{buyer}/transactions": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Creates a product transaction for the buyer",
                "description": "Returns the product transaction for the buyer's data",
                "operationId": "postProductBuyerTransaction",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "buyer",
                        "in": "path",
                        "description": "Buyer id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "quantity": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a product or buyer with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "property": null,
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Does not exist any product with the specified identificator."
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": "404"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "property": null,
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Does not exist any buyer with the specified identificator."
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": "404"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returns when there's some validation trouble",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "property": null,
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "The buyer must be different from the seller"
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": "409"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "property": null,
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "The buyer must be a verified user"
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": "409"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "property": null,
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "The product is not available"
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": "409"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "property": null,
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "The product does not have enough units for this transaction"
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": "409"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/products/{product}/categories": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of product's categories",
                "description": "Returns list of product's categories",
                "operationId": "getProductCategoriessList",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Transaction property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a product with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any product with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/products/{product}/categories/{category}": {
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Attaches a product to a category",
                "description": "Returns product's attached categories data",
                "operationId": "attachProductToCategory",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a product or category with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "property": null,
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Does not exist any product with the specified identificator."
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": "404"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "property": null,
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Does not exist any category with the specified identificator."
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": "404"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Detatches a product's from a category and returns the remaining ones",
                "description": "Return",
                "operationId": "detatchProductFromCategory",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a product or category with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "property": null,
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Does not exist any product with the specified identificator."
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": "404"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "property": null,
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Does not exist any category with the specified identificator."
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": "404"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "property": null,
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "The specified category is not a category of this product"
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": "404"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of products",
                "description": "Returns list of products",
                "operationId": "getProductsList",
                "parameters": [
                    {
                        "name": "stock",
                        "in": "query",
                        "description": "List all products with the specified stock amount",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "situation",
                        "in": "query",
                        "description": "List all products with the specified situation",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Product property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/products/{product}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product information",
                "description": "Returns product data",
                "operationId": "getProductById",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a product with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any product with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/products/{product}/transactions": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of product's transactions",
                "description": "Returns list of product's transactions",
                "operationId": "getProductTransactionsList",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "List all product's transaction with the specified quantity of products",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Transaction property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a product with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any product with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/sellers/{seller}/buyers": {
            "get": {
                "tags": [
                    "Sellers"
                ],
                "summary": "Get list of seller's buyers",
                "description": "Returns list of seller's buyers",
                "operationId": "getSellerBuyersList",
                "parameters": [
                    {
                        "name": "seller",
                        "in": "path",
                        "description": "Seller id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Transaction property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a seller with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any seller with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/sellers/{seller}/categories": {
            "get": {
                "tags": [
                    "Sellers"
                ],
                "summary": "Get list of seller's categories",
                "description": "Returns list of seller's categories",
                "operationId": "getSellerCategoriesList",
                "parameters": [
                    {
                        "name": "seller",
                        "in": "path",
                        "description": "Seller id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Transaction property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a seller with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any seller with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/sellers": {
            "get": {
                "tags": [
                    "Sellers"
                ],
                "summary": "Get list of sellers",
                "description": "Returns list of sellers",
                "operationId": "getSellersList",
                "parameters": [
                    {
                        "name": "isVerified",
                        "in": "query",
                        "description": "List all verified users",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Seller property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/sellers/{seller}": {
            "get": {
                "tags": [
                    "Sellers"
                ],
                "summary": "Get seller information",
                "description": "Returns seller data",
                "operationId": "getSellerById",
                "parameters": [
                    {
                        "name": "seller",
                        "in": "path",
                        "description": "Seller id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a seller with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any seller with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/sellers/{seller}/products": {
            "get": {
                "tags": [
                    "Sellers"
                ],
                "summary": "Get list of seller's products",
                "description": "Returns list of seller's products",
                "operationId": "getSellerProductsList",
                "parameters": [
                    {
                        "name": "seller",
                        "in": "path",
                        "description": "Seller id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "stock",
                        "in": "query",
                        "description": "List all seller's products with the specified stock amount",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "situation",
                        "in": "query",
                        "description": "List all seller's products with the specified situation",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Transaction property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a seller with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any seller with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Sellers"
                ],
                "summary": "Store new seller's product",
                "description": "Returns seller's product data",
                "operationId": "storeSellerProduct",
                "parameters": [
                    {
                        "name": "seller",
                        "in": "path",
                        "description": "Seller id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "stock": {
                                        "type": "integer"
                                    },
                                    "image": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a seller with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any seller with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns when there's some validation trouble",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "The name is required."
                                                            ]
                                                        }
                                                    },
                                                    "description": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "The description is required."
                                                            ]
                                                        }
                                                    },
                                                    "quantity": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "The quantity is required."
                                                            ]
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "422"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/sellers/{seller}/products/{product}": {
            "post": {
                "tags": [
                    "Sellers"
                ],
                "summary": "Update a seller's product",
                "description": "Returns seller's product updated data",
                "operationId": "upadateSellersProduct",
                "parameters": [
                    {
                        "name": "seller",
                        "in": "path",
                        "description": "Seller id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_method",
                        "in": "query",
                        "description": "Method",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "PUT"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "stock": {
                                        "type": "integer"
                                    },
                                    "situation": {
                                        "type": "string"
                                    },
                                    "image": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a seller or product with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "property": null,
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Does not exist any seller with the specified identificator."
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": "404"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "property": null,
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Does not exist any product with the specified identificator."
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": "404"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returns when there's some validation trouble",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An active product must have at least one category"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "409"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns when there's some validation trouble",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "property": null,
                                            "properties": {
                                                "error": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "The name is required."
                                                                    ]
                                                                }
                                                            },
                                                            "description": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "The description is required."
                                                                    ]
                                                                }
                                                            },
                                                            "quantity": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "The quantity is required."
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": "422"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "property": null,
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "The specified seller is not the actual seller of the product"
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": "422"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Sellers"
                ],
                "summary": "Deletes a seller's product and return no content",
                "description": "Return",
                "operationId": "deleteSellersProduct",
                "parameters": [
                    {
                        "name": "seller",
                        "in": "path",
                        "description": "Seller id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a seller or product with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "property": null,
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Does not exist any seller with the specified identificator."
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": "404"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "property": null,
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Does not exist any product with the specified identificator."
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "example": "404"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns when there's some validation trouble",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The specified seller is not the actual seller of the product"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "422"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/sellers/{seller}/transactions": {
            "get": {
                "tags": [
                    "Sellers"
                ],
                "summary": "Get list of seller's transactions",
                "description": "Returns list of seller's transactions",
                "operationId": "getSellerTransactionsList",
                "parameters": [
                    {
                        "name": "seller",
                        "in": "path",
                        "description": "Seller id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "List all seller's transaction with the specified quantity of products",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Transaction property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a seller with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any seller with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/transactions/{transaction}/categories": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get list of transaction's categories",
                "description": "Returns list of transaction's categories",
                "operationId": "getTransactionTransactionsList",
                "parameters": [
                    {
                        "name": "transaction",
                        "in": "path",
                        "description": "Transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Transaction property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when category is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when category is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/transactions": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get list of transactions",
                "description": "Returns list of transactions",
                "operationId": "getTransactionsList",
                "parameters": [
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "List all transaction with the specified quantity of products",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Transaction property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when transaction is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when transaction is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/transactions/{transaction}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction information",
                "description": "Returns transaction data",
                "operationId": "getTransactionById",
                "parameters": [
                    {
                        "name": "transaction",
                        "in": "path",
                        "description": "Transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when transaction is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when transaction is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/transactions/{transaction}/sellers": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get the transaction's seller",
                "description": "Returns the transaction's seller",
                "operationId": "getTransactionSeller",
                "parameters": [
                    {
                        "name": "transaction",
                        "in": "path",
                        "description": "Transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when transaction is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when transaction is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "getUsersList",
                "parameters": [
                    {
                        "name": "isVerified",
                        "in": "query",
                        "description": "List all verified users",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "isAdmin",
                        "in": "query",
                        "description": "List all admin users",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "User property to sort sort the data by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "How many records to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Store new user",
                "description": "Returns user data",
                "operationId": "storeUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "password"
                                    },
                                    "passwordConfirmation": {
                                        "type": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns when there's some valuseration trouble",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "The name is required."
                                                            ]
                                                        }
                                                    },
                                                    "email": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "The email is required."
                                                            ]
                                                        }
                                                    },
                                                    "password": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "The password is required."
                                                            ]
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "422"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/users/{user}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user information",
                "description": "Returns user data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a user with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any user with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update existing user",
                "description": "Returns updated user data",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "name",
                                    "passwordConfirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "isAdmin": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "password"
                                    },
                                    "passwordConfirmation": {
                                        "type": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a user with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any user with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when trying give admin role to an unverified user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Only verified users can modify the admin field."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "409"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns when there's some valuseration trouble",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "The name is required."
                                                            ]
                                                        }
                                                    },
                                                    "email": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "The email is required."
                                                            ]
                                                        }
                                                    },
                                                    "password": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "enum": [
                                                                "The password is required."
                                                            ]
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "422"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete existing user",
                "description": "Deletes a user data and returns no content",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when user is not authorized to perform this request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid scopes provided."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "403"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a user with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any user with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/users/me": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user information",
                "description": "Returns user data",
                "operationId": "getAuthenticatedUserInformation",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "401"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "development": []
                    },
                    {
                        "production": []
                    }
                ]
            }
        },
        "/users/verify/{token}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Verify existing user",
                "description": "Verify a existing user and return a success message",
                "operationId": "verifyUser",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "User token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The account has been successfully verified"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "200"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a user with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any user with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{user}/resend": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Resend user token",
                "description": "Resend through email the user token and return a success message",
                "operationId": "resendUserToken",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The verification token has been resend"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "200"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when there's not a user with the provided id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Does not exist any user with the specified identificator."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "404"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already veiried",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "This user is already verified"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "409"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns when there's some problem with the application. Please report to the development team when getting this response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "We are facing an unespected problem. Please try again later"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "API Endpoints of Users"
        }
    ],
    "components": {
        "securitySchemes": {
            "development": {
                "type": "oauth2",
                "description": "Laravel  passport oauth2 security for development.",
                "scheme": "http",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://127.0.0.1:8000/oauth/authorize",
                        "tokenUrl": "http://127.0.0.1:8000/oauth/token",
                        "refreshUrl": "http://127.0.0.1:8000/token/refresh",
                        "scopes": {
                            "purchase-product": "Create a new transaction for a specific product.",
                            "manage-products": "Create, read, update and delete products (CRUD).",
                            "manage-account": "Read your account data (except password) and modify it. Cannot delete.",
                            "read-general": "Read General information like purchasing categories, purchased products,\n                                    selling products, selling categories, your transactions (purchases ans sales)."
                        }
                    }
                }
            },
            "production": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security for production.",
                "scheme": "httpa",
                "flows": {
                    "password": {
                        "authorizationUrl": "https://brnathanlima-laravel-api.herokuapp.com/oauth/authorize",
                        "tokenUrl": "https://brnathanlima-laravel-api.herokuapp.com/oauth/token",
                        "refreshUrl": "https://brnathanlima-laravel-api.herokuapp.com/token/refresh",
                        "scopes": {
                            "purchase-product": "Create a new transaction for a specific product.",
                            "manage-products": "Create, read, update and delete products (CRUD).",
                            "manage-account": "Read your account data (except password) and modify it. Cannot delete.",
                            "read-general": "Read General information like purchasing categories, purchased products,\n                                    selling products, selling categories, your transactions (purchases ans sales)."
                        }
                    }
                }
            }
        }
    },
    "security": [
        []
    ]
}